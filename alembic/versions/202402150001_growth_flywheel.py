"""Growth flywheel tables and UTM columns"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "202402150001"
down_revision = "0003_commerce_tables"
branch_labels = None
depends_on = None


_DAILY_TIPS = [
    "Начинай день со стакана воды — запускает метаболизм.",
    "30 минут быстрой ходьбы поддерживают чувствительность к инсулину.",
    "Сон до полуночи даёт более глубокие фазы восстановления.",
    "Добавь клетчатку в каждый приём пищи — микробиота скажет спасибо.",
    "Старайся завершать ужин за 3 часа до сна.",
    "Контрастный душ вечером снижает стресс и улучшает сон.",
    "Веди дневник благодарности — 3 записи в день снижают уровень кортизола.",
    "Замени вторую чашку кофе на травяной чай с мятой.",
    "10 минут растяжки после тренировки ускоряют восстановление мышц.",
    "Глубокое дыхание 4-7-8 помогает уснуть быстрее.",
    "Планируй приём омеги-3 во время еды для лучшего усвоения.",
    "Следи за осанкой: таймер на каждые 45 минут для разминки.",
    "Добавь яркие овощи — каждый цвет = новый спектр антиоксидантов.",
    "Ешь орехи 3-4 раза в неделю — источник магния и полезных жиров.",
    "Пей воду небольшими порциями в течение дня, а не залпом.",
    "Включай светотерапию утром для синхронизации циркадных ритмов.",
    "Сделай короткий перерыв каждые 90 минут работы — мозг благодарен.",
    "Дыши диафрагмой: 5 глубоких вдохов перед важным звонком.",
    "Добавь белок в завтрак — держит сытость дольше.",
    "Проводите минимум 15 минут на свежем воздухе каждый день.",
    "Используй правило 20-20-20 для глаз: каждые 20 минут смотри вдаль.",
    "Тёплая ванночка для стоп помогает расслабиться перед сном.",
    "Слушай любимую музыку — повышает дофамин и настроение.",
    "Планируй приём витамина D вместе с жирной пищей.",
    "Записывай цели недели — это повышает вероятность их выполнения.",
    "Не держи телефон у лица перед сном — синий свет мешает мелатонину.",
    "Добавь цельнозерновые продукты для стабильного уровня глюкозы.",
    "Смех 5 минут в день — натуральный антистресс.",
    "Охлаждай комнату до 18-20°C для более глубокого сна.",
    "Проветривай помещение каждые пару часов — мозгу нужен кислород.",
    "Съешь яблоко или ягоды вместо сладкого десерта.",
    "Запланируй встречу с друзьями — социальные связи продлевают жизнь.",
    "Держи под рукой полезные перекусы: орехи, овощные палочки, хумус.",
    "Составь список дел вечером — мозг отдыхает без хаоса мыслей.",
    "Старайся заканчивать тренировку лёгкой заминкой, чтобы снизить пульс.",
    "Убери гаджеты со стола во время еды — насыщение наступит раньше.",
    "Добавь тёмный шоколад 70% в рацион — источник магния и антиоксидантов.",
    "Раз в час делай 10 приседаний — микроактивность важна.",
    "Включай в рацион ферментированные продукты для здоровья кишечника.",
    "Пей травяной чай из ромашки перед сном для мягкого расслабления.",
    "Заведи привычку благодарить себя за маленькие победы каждый вечер.",
    "Используй напоминания о воде в телефоне — работает лучше, чем память.",
    "Добавь к завтраку горсть ягод — природный комплекс витаминов.",
    "Разговаривай по телефону стоя — дополнительная активность за день.",
    "Откажись от гаджетов за час до сна ради качественного отдыха.",
    "Выполняй силовые упражнения 2-3 раза в неделю для крепких мышц.",
    "Читай 10 страниц перед сном вместо бесконечной ленты.",
    "Попробуй йогу-нидру — глубокая релаксация за 15 минут.",
    "Готовь заранее полезные блюда на 2-3 дня — меньше соблазнов.",
    "Начинай утро с лёгкой зарядки — разгоняет лимфу и бодрит.",
]


def upgrade() -> None:
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("utm_source", sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column("utm_medium", sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column("utm_campaign", sa.String(length=128), nullable=True))

    op.create_table(
        "daily_tips",
        sa.Column("id", sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("active", sa.SmallInteger(), nullable=False, server_default="1"),
    )
    op.create_table(
        "daily_tip_subscriptions",
        sa.Column("user_id", sa.BigInteger(), sa.ForeignKey("users.id", ondelete="CASCADE"), primary_key=True),
        sa.Column("timezone", sa.String(length=64), nullable=False, server_default="UTC"),
        sa.Column("enabled", sa.SmallInteger(), nullable=False, server_default="0"),
        sa.Column("next_send_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_tip_id", sa.Integer(), sa.ForeignKey("daily_tips.id"), nullable=True),
    )

    tips_table = sa.table(
        "daily_tips",
        sa.column("text", sa.Text()),
        sa.column("active", sa.SmallInteger()),
    )
    op.bulk_insert(
        tips_table,
        [{"text": text, "active": 1} for text in _DAILY_TIPS],
    )


def downgrade() -> None:
    op.drop_table("daily_tip_subscriptions")
    op.drop_table("daily_tips")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_column("utm_campaign")
        batch_op.drop_column("utm_medium")
        batch_op.drop_column("utm_source")
