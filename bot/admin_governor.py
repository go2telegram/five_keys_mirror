from __future__ import annotations

import datetime as dt
from typing import Dict, Iterable
from zoneinfo import ZoneInfo

from app.config import settings
from app.governor_service import get_engine


def _format_ts(ts: str | None) -> str:
    if not ts:
        return "‚Äî"
    try:
        value = dt.datetime.fromisoformat(ts)
    except ValueError:
        return ts
    tz = ZoneInfo(settings.TZ)
    value = value.replace(tzinfo=dt.timezone.utc).astimezone(tz)
    return value.strftime("%d.%m %H:%M")


def _format_action(action: Dict[str, object]) -> str:
    if not action:
        return "‚Äî"
    key, value = next(iter(action.items()))
    return f"{key}: {value}"


def render_governor_status() -> str:
    engine = get_engine()
    status = engine.get_status()

    lines: list[str] = ["üõ° Governor", ""]
    last_run = _format_ts(status.get("last_run_at"))
    lines.append(f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–≥–æ–Ω: {last_run}")

    rules: Iterable[Dict[str, object]] = status.get("rules", [])
    if not rules:
        lines.append("–ü—Ä–∞–≤–∏–ª –Ω–µ—Ç (rules.yml –ø—É—Å—Ç).")
    else:
        lines.append("\n–ü—Ä–∞–≤–∏–ª–∞:")
        for item in rules:
            action = _format_action(item.get("do", {}))
            state = "ACTIVE" if item.get("active") else "ok"
            lines.append(f"‚Ä¢ if {item.get('if')} ‚Üí {action} ‚Äî {state}")
            lines.append(
                "  "
                + f"–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–∏–≥–≥–µ—Ä: {_format_ts(item.get('last_triggered'))}, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: {_format_ts(item.get('last_cleared'))}"
            )

    history = status.get("history", [])
    if history:
        lines.append("\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è:")
        for entry in history[:5]:
            action = _format_action(entry.get("action", {}))
            lines.append(f"‚Ä¢ {_format_ts(entry.get('ts'))} ‚Äî {entry.get('rule')} ‚Üí {action}")
            if details := entry.get("details"):
                lines.append(f"  {details}")
    return "\n".join(lines)


__all__ = ["render_governor_status"]
