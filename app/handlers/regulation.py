from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from app.config import settings
from app.storage import get_regulation_state

router = Router()


def _format_percent(value: float) -> str:
    return f"{value * 100:.1f}%"


@router.message(Command("regulation_status"))
async def regulation_status(message: Message) -> None:
    state = get_regulation_state()

    if not settings.ENABLE_REGULATION_LAYER:
        await message.answer(
            "\n".join(
                [
                    "‚ö†Ô∏è –°–ª–æ–π —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫–ª—é—á—ë–Ω.",
                    "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ENABLE_REGULATION_LAYER=true –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å.",  # noqa: E501
                ]
            )
        )
        return

    tax = state.get("tax_rate", 0.0)
    subsidy = state.get("subsidy_rate", 0.0)
    balance = state.get("economic_balance", 1.0)
    notes = state.get("notes", "")
    last_updated = state.get("last_updated") or "‚Äî"

    text = (
        "üìà –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏\n"
        f"–ù–∞–ª–æ–≥: {_format_percent(tax)}\n"
        f"–°—É–±—Å–∏–¥–∏—è: {_format_percent(subsidy)}\n"
        f"–ë–∞–ª–∞–Ω—Å: {balance:.3f}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {notes}\n"
        f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {last_updated}"
    )
    await message.answer(text)
