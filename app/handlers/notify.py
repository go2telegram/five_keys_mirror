# app/handlers/notify.py
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from app.storage import ensure_user, user_get, user_set

router = Router()


@router.message(Command("notify_on"))
async def notify_on(m: Message):
    profile = await ensure_user(m.from_user.id, {"subs": False})
    profile["subs"] = True
    await user_set(m.from_user.id, profile)
    await m.answer("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å 1‚Äì2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.")


@router.message(Command("notify_off"))
async def notify_off(m: Message):
    profile = await ensure_user(m.from_user.id, {"subs": False})
    profile["subs"] = False
    await user_set(m.from_user.id, profile)
    await m.answer("üîï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã. –í–∫–ª—é—á–∏—Ç—å —Å–Ω–æ–≤–∞: /notify_on")


@router.message(Command("notify"))
async def notify_help(m: Message):
    profile = await user_get(m.from_user.id)
    subs = profile.get("subs")
    status = "–≤–∫–ª—é—á–µ–Ω—ã" if subs else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
    await m.answer(
        f"–°–µ–π—á–∞—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è {status}.\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /notify_on ‚Äî –≤–∫–ª—é—á–∏—Ç—å\n"
        "‚Ä¢ /notify_off ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å"
    )
