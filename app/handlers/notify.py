# app/handlers/notify.py
from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message

from app.db.session import session_scope
from app.keyboards import kb_back_home
from app.repo import events as events_repo

router = Router()


@router.message(Command("notify_on"))
async def notify_on(m: Message):
    async with session_scope() as session:
        await events_repo.log(session, m.from_user.id, "notify_on", {})
        await session.commit()
    await m.answer("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å 1‚Äì2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.")


@router.message(Command("notify_off"))
async def notify_off(m: Message):
    async with session_scope() as session:
        await events_repo.log(session, m.from_user.id, "notify_off", {})
        await session.commit()
    await m.answer("üîï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã. –í–∫–ª—é—á–∏—Ç—å —Å–Ω–æ–≤–∞: /notify_on")


@router.message(Command("notify"))
async def notify_help(m: Message):
    async with session_scope() as session:
        last_status = await events_repo.last_by(session, m.from_user.id, "notify_on")
        last_off = await events_repo.last_by(session, m.from_user.id, "notify_off")

    status = "–≤–∫–ª—é—á–µ–Ω—ã" if last_status and (not last_off or last_status.ts > last_off.ts) else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
    await m.answer(
        f"–°–µ–π—á–∞—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è {status}.\n\n" "–ö–æ–º–∞–Ω–¥—ã:\n" "‚Ä¢ /notify_on ‚Äî –≤–∫–ª—é—á–∏—Ç—å\n" "‚Ä¢ /notify_off ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å"
    )


@router.callback_query(F.data == "notify:help")
async def notify_help_cb(c: CallbackQuery):
    async with session_scope() as session:
        last_status = await events_repo.last_by(session, c.from_user.id, "notify_on")
        last_off = await events_repo.last_by(session, c.from_user.id, "notify_off")

    status = "–≤–∫–ª—é—á–µ–Ω—ã" if last_status and (not last_off or last_status.ts > last_off.ts) else "–≤—ã–∫–ª—é—á–µ–Ω—ã"

    await c.message.edit_text(
        f"–°–µ–π—á–∞—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è {status}.\n\n" "–ö–æ–º–∞–Ω–¥—ã:\n" "‚Ä¢ /notify_on ‚Äî –≤–∫–ª—é—á–∏—Ç—å\n" "‚Ä¢ /notify_off ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å",
        reply_markup=kb_back_home("home"),
    )
