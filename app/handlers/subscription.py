from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.config import settings
from app.db.session import session_scope
from app.repo import subscriptions as subscriptions_repo, users as users_repo

router = Router()


def _kb_sub_menu():
    kb = InlineKeyboardBuilder()
    if settings.TRIBUTE_LINK_BASIC:
        kb.button(
            text=f"üíé MITO Basic ‚Äî {settings.SUB_BASIC_PRICE}",
            url=settings.TRIBUTE_LINK_BASIC,
        )
    if settings.TRIBUTE_LINK_PRO:
        kb.button(
            text=f"üíé MITO Pro ‚Äî {settings.SUB_PRO_PRICE}",
            url=settings.TRIBUTE_LINK_PRO,
        )
    kb.button(text="üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="sub:check")
    kb.button(text="üîì –û—Ç–∫—Ä—ã—Ç—å Premium", callback_data="premium:menu")
    kb.button(text="üè† –î–æ–º–æ–π", callback_data="home")
    kb.adjust(1, 1, 1, 1)
    return kb.as_markup()


@router.callback_query(F.data == "sub:menu")
async def sub_menu(c: CallbackQuery):
    await c.message.edit_text(
        "üíé <b>–ü–æ–¥–ø–∏—Å–∫–∞</b>\n–û—Ñ–æ—Ä–º–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∏ –ø–æ–ª—É—á–∏—Ç–µ Premium-—Ä–∞–∑–¥–µ–ª—ã –ú–ò–¢–û—Å–æ–æ–±—â–µ—Å—Ç–≤–∞.",
        reply_markup=_kb_sub_menu(),
    )


@router.callback_query(F.data == "sub:check")
async def sub_check(c: CallbackQuery):
    async with session_scope() as session:
        await users_repo.get_or_create_user(session, c.from_user.id, c.from_user.username)
        is_active, sub = await subscriptions_repo.is_active(session, c.from_user.id)

    if is_active and sub:
        await c.message.edit_text(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞: <b>{sub.plan.upper()}</b>")
    else:
        await c.message.edit_text(
            "–ü–æ–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–ø–ª–∞—Ç—É –≤ Tribute –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–≤–µ–±—Ö—É–∫).",
            reply_markup=_kb_sub_menu(),
        )
