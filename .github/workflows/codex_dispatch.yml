name: codex_dispatch

on:
  repository_dispatch:
    types: [codex_command]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: codex-pages-${{ github.ref || github.run_id }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Gate: для repository_dispatch проверяем секрет; для workflow_dispatch пускаем всегда
      - name: Gate (repo_dispatch key)
        id: gate
        shell: bash
        run: |
          ALLOWED=true
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            if [[ "${{ github.event.client_payload.key }}" != "${{ secrets.CODEX_SHARED_KEY }}" ]]; then
              echo "wrong or empty key" | tee -a debug.log
              ALLOWED=false
            fi
          fi
          echo "allowed=$ALLOWED" >> "$GITHUB_OUTPUT"

      # Минимальный билд: всегда кладём index.html, чтобы Pages не были пустыми
      - name: Build site (index.html)
        if: steps.gate.outputs.allowed == 'true' || github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          mkdir -p artifacts/menu
          cat > artifacts/menu/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <title>five_keys_mirror · Diagrams</title>
          <style>
            body{font:16px/1.5 system-ui,Segoe UI,Roboto,Arial,sans-serif;padding:24px;max-width:900px;margin:auto}
            header{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px}
            .pill{background:#eef;border:1px solid #ccd;border-radius:999px;padding:4px 10px;font-size:12px;color:#345}
            .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:16px}
            .card{border:1px solid #e4e7ec;border-radius:12px;padding:12px}
            img{max-width:100%;height:auto;display:block;border-radius:8px;border:1px solid #ddd;background:#fff}
            footer{margin-top:24px;color:#667}
            a{color:#06c;text-decoration:none}
          </style>
          <header>
            <h1>Mermaid diagrams</h1>
            <span class="pill">auto-published via GitHub Pages</span>
          </header>
          <p>Страница генерируется всегда. SVG берём из <code>artifacts/menu/</code>.</p>
          <div class="grid">
          <!-- LIST -->
          HTML

          # Если SVG нет — положим placeholder, чтобы не было пусто
          shopt -s nullglob
          has_svg=false
          for s in artifacts/menu/*.svg; do
            has_svg=true
            b=$(basename "$s")
            printf '<div class="card"><h3>%s</h3><img src="%s" alt="%s"></div>\n' "$b" "$b" "$b" >> artifacts/menu/index.html
          done
          if ! $has_svg; then
            cat > artifacts/menu/sample.svg <<'SVG'
            <svg xmlns="http://www.w3.org/2000/svg" width="640" height="200">
              <rect width="100%" height="100%" fill="#f8fafc"/>
              <text x="20" y="60" font-size="24" fill="#334155">No diagrams yet</text>
              <text x="20" y="100" font-size="14" fill="#64748b">Add docs/*.mmd and wire rendering later.</text>
            </svg>
            SVG
            printf '<div class="card"><h3>%s</h3><img src="%s" alt="%s"></div>\n' "sample.svg" "sample.svg" "sample.svg" >> artifacts/menu/index.html
          fi

          cat >> artifacts/menu/index.html <<'HTML'
          </div>
          <footer>
            <p>Repo: <a href="https://github.com/go2telegram/five_keys_mirror">go2telegram/five_keys_mirror</a></p>
          </footer>
          HTML

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts/menu
      - id: deploy
        uses: actions/deploy-pages@v4
      - name: Print URL
        run: echo "Pages URL: ${{ steps.deploy.outputs.page_url }}"
