name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install ruff black pre-commit
      - run: ruff check .
      - run: black --check .
      - run: pre-commit run --all-files
      - run: python tools/check_ascii_ps1.py

  sqlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      - name: Install SQLite driver
        run: pip install aiosqlite
      - run: echo "BOT_TOKEN=test" >> $GITHUB_ENV
      - run: echo "ADMIN_ID=1" >> $GITHUB_ENV
      - run: echo "DB_URL=sqlite+aiosqlite:///./var/bot.db" >> $GITHUB_ENV
      - run: mkdir -p var
      - run: alembic upgrade head
      - run: python scripts/db_check.py
      - run: pytest -q || true

  postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: five_keys
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s --health-timeout=5s --health-retries=10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt asyncpg
      - run: echo "BOT_TOKEN=test" >> $GITHUB_ENV
      - run: echo "ADMIN_ID=1" >> $GITHUB_ENV
      - run: echo "DB_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/five_keys" >> $GITHUB_ENV
      - run: alembic upgrade head
      - run: python scripts/db_check.py
      - run: pytest -q || true

  lint-autofix:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install ruff black pre-commit
      - run: ruff check . --fix
      - run: black .
      - run: pre-commit run --all-files || true
      - run: python tools/check_ascii_ps1.py
      - name: Commit lint autofixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: apply lint autofixes'
          branch: ${{ github.head_ref }}
