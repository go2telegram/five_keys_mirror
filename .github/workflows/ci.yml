name: CI

on:
  push:
    branches:
      - main
      - integration/**
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Build catalog (strict: from images)
        run: |
          python tools/build_products.py build \
            --descriptions-path "app/catalog/descriptions" \
            --images-mode local \
            --images-dir "app/static/images/products"
          python tools/build_products.py validate
      - name: HEAD-check product images (warning only)
        run: |
          python - <<'PY'
          import json, requests
          with open('app/catalog/products.json', encoding='utf-8') as f:
              data = json.load(f)
          urls = []
          for p in (data.get('products', []) if isinstance(data, dict) else data):
              img = p.get('image') or (p.get('images') or [None])[0]
              if img:
                  urls.append(img)
          bad = []
          for u in urls:
              try:
                  r = requests.head(u, timeout=6)
                  if r.status_code != 200:
                      bad.append((u, r.status_code))
              except Exception:
                  bad.append((u, 'ERR'))
          if bad:
              print('BAD images:', len(bad))
              for u, c in bad[:20]:
                  print('BAD', c, u)
          else:
              print('All product images are reachable (200).')
          PY
      - name: Run tests
        run: pytest
      - name: Repository audit
        run: tools/audit_repo.sh
