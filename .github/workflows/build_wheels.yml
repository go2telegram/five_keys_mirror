name: Build offline wheels (win_amd64, py311)

on:
  workflow_dispatch: {}
  push:
    paths:
      - wheels-packages.txt
      - requirements.txt
      - .github/workflows/build_wheels.yml

jobs:
  wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download wheels for Windows cp311
        run: |
          python -m pip install --upgrade pip
          mkdir -p dist/wheels
          python -m pip download -r wheels-packages.txt -d dist/wheels \
            --only-binary=:all: \
            --platform win_amd64 \
            --python-version 3.11 \
            --implementation cp \
            --abi cp311
          python -m pip download -r requirements.txt -d dist/wheels \
            --only-binary=:all: \
            --platform win_amd64 \
            --python-version 3.11 \
            --implementation cp \
            --abi cp311

      - name: Deduplicate wheels
        run: |
          python - <<'PY'
          from pathlib import Path

          wheel_dir = Path('dist/wheels')
          seen = {}
          for path in sorted(wheel_dir.glob('*.whl')):
            name = path.name
            if name in seen:
              path.unlink()
            else:
              seen[name] = path
          PY

      - name: Archive wheels
        run: |
          cd dist && zip -r wheels-win_amd64-cp311.zip wheels

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-win_amd64-cp311
          path: dist/wheels-win_amd64-cp311.zip

  offline-smoke:
    runs-on: windows-latest
    needs: wheels
    steps:
      - uses: actions/checkout@v4

      - name: Download wheels artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-win_amd64-cp311
          path: dist

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Offline install and smoke test
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          Expand-Archive -Path dist\wheels-win_amd64-cp311.zip -DestinationPath dist -Force
          if (-not (Test-Path dist\wheels)) {
            Write-Error 'wheels directory missing after extraction'
            exit 1
          }
          python -m pip install --upgrade pip
          pip install --no-index --find-links dist\wheels -r wheels-packages.txt
          pip install --no-index --find-links dist\wheels -r requirements.txt
          $smoke = @'
          import aiogram, sqlalchemy, reportlab, apscheduler, httpx
          print("offline wheels smoke ok")
          '@
          $smoke | python

  offline-smoke-update:
    runs-on: windows-latest
    needs: wheels
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download wheels artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-win_amd64-cp311
          path: dist

      - name: Offline updater smoke
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = 'Stop'
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          Expand-Archive -Path dist\wheels-win_amd64-cp311.zip -DestinationPath dist -Force
          if (-not (Test-Path dist\wheels)) {
            Write-Error 'wheels directory missing after extraction'
            exit 1
          }
          Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass | Out-Null
          $resolvedWheels = (Resolve-Path dist\wheels).Path
          & .\scripts\offline_install.ps1 -WheelsDir $resolvedWheels
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          $envLines = @(
            'BOT_TOKEN=TEST:FAKE'
            'DB_URL=sqlite+aiosqlite:///./var/bot.db'
            'TIMEZONE=Europe/Moscow'
            'ADMIN_ID=1'
          )
          Set-Content -Path .env -Value ($envLines -join "`n") -Encoding UTF8
          New-Item -ItemType Directory -Path var -Force | Out-Null
          alembic upgrade head
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          python scripts\db_check.py
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          $smokeLines = @(
            'import aiogram, sqlalchemy, reportlab, apscheduler, httpx'
            'import app.main  # noqa: F401'
            'print("smoke ok")'
          )
          $smokeContent = ($smokeLines -join "`n") + "`n"
          $smokeContent | python
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
